package forms;

import data.Category;
import data.ClientConnection;
import data.ClientHelper;
import data.Platforms;
import data.User;
import data.Videogame;
import static encrypt.Encrypter.getEncodedString;
import java.io.FileInputStream;
import java.io.IOException;

import java.net.InetSocketAddress;
import java.net.Socket;
import java.security.KeyManagementException;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.cert.CertificateException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLSocket;
import javax.net.ssl.SSLSocketFactory;
import javax.net.ssl.TrustManager;
import javax.net.ssl.TrustManagerFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author CARLA LLENAS
 */
public class login extends javax.swing.JFrame implements Runnable {

    /**
     * constructor de la classe
     */
    public login() {
        try {
            ClientConnection.getDos().writeByte(3);
            new ClientHelper((List<Videogame>) ClientConnection.getOis().readObject(), (List<Category>) ClientConnection.getOis().readObject(), (List<Platforms>) ClientConnection.getOis().readObject());
            initComponents();
            this.setLocationRelativeTo(null);
        } catch (IOException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnLogin = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        btnRegistro = new javax.swing.JButton();
        txtUsuario = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        LabelUsuario = new javax.swing.JLabel();
        LabelPassword = new javax.swing.JLabel();
        showPass = new javax.swing.JCheckBox();
        labelTittle = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        labelFondo = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ludox Login");
        setBackground(new java.awt.Color(204, 0, 255));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setLayout(null);

        btnLogin.setBackground(new java.awt.Color(0, 0, 0));
        btnLogin.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(255, 255, 255));
        btnLogin.setText("Log in");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        jPanel1.add(btnLogin);
        btnLogin.setBounds(200, 320, 165, 49);

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\CARLA LLENAS\\OneDrive\\Documentos\\NetBeansProjects\\LudoxCliente\\src\\main\\images\\Captura.png")); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 10, 100, 85);

        btnSalir.setBackground(new java.awt.Color(0, 0, 0));
        btnSalir.setForeground(new java.awt.Color(255, 255, 255));
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir);
        btnSalir.setBounds(50, 400, 69, 40);

        btnRegistro.setBackground(new java.awt.Color(0, 0, 0));
        btnRegistro.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistro.setText("Registrarse");
        btnRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistroActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegistro);
        btnRegistro.setBounds(420, 400, 100, 40);

        txtUsuario.setBackground(new java.awt.Color(102, 102, 102));
        txtUsuario.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtUsuario.setForeground(new java.awt.Color(255, 255, 255));
        txtUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsuarioActionPerformed(evt);
            }
        });
        jPanel1.add(txtUsuario);
        txtUsuario.setBounds(180, 150, 241, 32);

        txtPassword.setBackground(new java.awt.Color(102, 102, 102));
        txtPassword.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtPassword.setForeground(new java.awt.Color(255, 255, 255));
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });
        jPanel1.add(txtPassword);
        txtPassword.setBounds(180, 210, 241, 32);

        LabelUsuario.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        LabelUsuario.setForeground(new java.awt.Color(255, 255, 255));
        LabelUsuario.setIcon(new javax.swing.ImageIcon("C:\\Users\\CARLA LLENAS\\OneDrive\\Documentos\\NetBeansProjects\\LudoxCliente\\src\\main\\images\\icons8-usuario-de-género-neutro-32.png")); // NOI18N
        LabelUsuario.setText("Usuario");
        jPanel1.add(LabelUsuario);
        LabelUsuario.setBounds(70, 150, 90, 32);

        LabelPassword.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        LabelPassword.setForeground(new java.awt.Color(255, 255, 255));
        LabelPassword.setIcon(new javax.swing.ImageIcon("C:\\Users\\CARLA LLENAS\\OneDrive\\Documentos\\NetBeansProjects\\LudoxCliente\\src\\main\\images\\icons8-desbloquear-2-32.png")); // NOI18N
        LabelPassword.setText("Contraseña");
        jPanel1.add(LabelPassword);
        LabelPassword.setBounds(50, 210, 120, 30);

        showPass.setBackground(new java.awt.Color(0, 0, 0));
        showPass.setForeground(new java.awt.Color(255, 255, 255));
        showPass.setText("Mostrar contraseña");
        showPass.setOpaque(false);
        showPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPassActionPerformed(evt);
            }
        });
        jPanel1.add(showPass);
        showPass.setBounds(350, 260, 134, 24);

        labelTittle.setBackground(new java.awt.Color(0, 0, 0));
        labelTittle.setFont(new java.awt.Font("Liberation Sans Narrow", 0, 48)); // NOI18N
        labelTittle.setForeground(new java.awt.Color(255, 255, 255));
        labelTittle.setText("Ludox");
        labelTittle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel1.add(labelTittle);
        labelTittle.setBounds(230, 30, 120, 52);

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jSeparator1);
        jSeparator1.setBounds(130, 90, 337, 10);

        labelFondo.setIcon(new javax.swing.ImageIcon("C:\\Users\\CARLA LLENAS\\OneDrive\\Documentos\\NetBeansProjects\\LudoxCliente\\src\\main\\images\\fonoLogin.jpg")); // NOI18N
        labelFondo.setPreferredSize(new java.awt.Dimension(580, 480));
        jPanel1.add(labelFondo);
        labelFondo.setBounds(0, 0, 580, 480);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed
    /**
     * metode on ens pot mostrar la contrasenya del camp de text o no.
     */
    private void showPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPassActionPerformed
        if (showPass.isSelected()) {
            txtPassword.setEchoChar((char) 0);

        } else {
            txtPassword.setEchoChar('*');
        }
    }//GEN-LAST:event_showPassActionPerformed

    /**
     * metode on conecta el botó amb la pantalla de registre dels usuaris. es
     * recicla la connexio del servidor i la base de dades.
     */
    private void btnRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistroActionPerformed
        registro reg = new registro(this, true);
        reg.setVisible(true);

    }//GEN-LAST:event_btnRegistroActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        doLogin(txtUsuario.getText(), getEncodedString(txtPassword.getText()));
    }//GEN-LAST:event_btnLoginActionPerformed

    /**
     * metode que ja comproba que els camps de text requerits no siguin null. Si
     * no ho son, l'usuari podra fer login
     *
     * @param username parametre del nom d'usuari
     * @param pass parametre de la constrasenya
     */
    public void doLogin(String username, String pass) {
        txtUsuario.setText("");
        txtPassword.setText("");

        System.out.println("username " + username + " pass " + pass);

        if (!username.isEmpty() && !pass.isEmpty()) {

            try {
                boolean ok = sendLogin(username, pass);

                if (!ok) {
                    JOptionPane.showMessageDialog(null, "Error de usuario o contraseña");
                } else {
                    User user = (User) ClientConnection.getOis().readObject();
                    ClientHelper.setUsername(user.getUsername());
                    Principal prin = new Principal(this, user);
                    prin.setVisible(true);
                    this.setVisible(false);
                }

            } catch (IOException | ClassNotFoundException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Falta ingresar usuario y contraseña");
        }
    }

    /**
     * metode per comprobar l'existencia de l'usuari mitjançant el nom d'usuari
     * i la contrasenya i pugui fer login
     *
     * @param username parametro del nombre de usuario
     * @param userPass parametro de la contraseña
     * @return
     */
    public boolean sendLogin(String username, String userPass) {
        try {
            ClientConnection.getDos().writeByte(1);
            ClientConnection.getDos().writeUTF(username);
            ClientConnection.getDos().writeUTF(userPass);
            return ClientConnection.getDis().readBoolean();

        } catch (IOException ex) {
            Logger.getLogger(registro.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    }

    private void txtUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsuarioActionPerformed

    /**
     * metode on es fa la connexió amb servidor. variables son el numero de
     * port, la ip del sevridor i el temps limit de connexio.
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        try {
            final int PORT = 5000;
//        final String IP = "90.170.253.138";
            final String IP = "localhost";

            KeyStore keystore = KeyStore.getInstance("JKS");
            keystore.load(new FileInputStream("Cert/mykeystore.jks"), "Ludox123.".toCharArray());
            TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509");
            tmf.init(keystore);

            SSLContext context = SSLContext.getInstance("TLS");
            TrustManager[] trustManagers = tmf.getTrustManagers();

            context.init(null, trustManagers, null);

            SSLSocketFactory sf = context.getSocketFactory();

            SSLSocket s = (SSLSocket) sf.createSocket(IP, PORT);
            s.startHandshake();

            new ClientConnection(s);
            login hiloC = new login();
            hiloC.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            hiloC.setVisible(true);
            new Thread(hiloC).start();
            
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (CertificateException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (KeyStoreException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (KeyManagementException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelPassword;
    private javax.swing.JLabel LabelUsuario;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnRegistro;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelFondo;
    private javax.swing.JLabel labelTittle;
    private javax.swing.JCheckBox showPass;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {

    }

}
